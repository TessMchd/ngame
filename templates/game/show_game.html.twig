{% extends 'base.html.twig' %}

{% block body %}
    <style>
        body{width:100%}
        #overlay {
            position:absolute;
            bottom:0;
            right:0;
            display: block; /* Hidden by default */
            width: 100%; /* Full width (cover the whole page) */
            height: 80%; /* Full height (cover the whole page) */
            background-color: rgba(0,0,0,0); /* Black background with opacity */
            z-index: 2; /* Specify a stack order in case you're using a different order for other elements */
            cursor: pointer; /* Add a pointer on hover */
        }
        #plateau{
            width: 90vw;
            margin-left: 50px;
        }

        #message{
            text-align: right;
            width: 90vw;
        }

        .readonly{
            pointer-events: none;
        }

        .card_main{
            width: 100px;
        }


    </style>

    <div id="plateau">
        {{ render(controller('App\\Controller\\GameController::refreshPlateauGame', {game:game.id})) }}
    </div>
    <div id="message" >...</div>

    <div id="overlay"></div>
    
{% endblock %}


{% block javascripts %}
    <script>
        var fintour=0
        var fpair = [];
        let boucle
        $(document).ready(function(){
            boucle = setInterval(refreshGame, 3000);
            if(localStorage.getItem('{{game.id}}')==null){

                localStorage.setItem('{{game.id}}', 0);
            }
            console.log(localStorage.getItem('{{game.id}}'))



        })




        $(document).on('click', '#finDeTour', function() {
            $.ajax({
                url: "{{ path('change_player', {game: game.id}) }}",
                data: {
                    pioche : 1
                },
                method: 'POST',
                success: function(data) {
                    if (data == true) {
                        localStorage.setItem('{{game.id}}', 0);
                        document.getElementById("finDeTour").disabled = true;
                        boucle = setInterval(refreshGame, 3000);
                        document.getElementById("overlay").style.display = "block";

                    }

                },
                error: function(){

                }
            })
        })


        function refreshGame() {
            $.ajax({
                url: "{{ path('get_tour', {game: game.id}) }}",
                success: function(data) {
                    console.log(data)
                    if (data == false) {
                        $('#message').html('A votre adversaire de jouer')

                    } else if(data == 'ended') {
                        clearInterval(boucle)
                        $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}", function (responseTxt, statusTxt, xhr) {
                            if (statusTxt == "success")
                                $('#message').html('La partie est terminée')
                            console.log('partie finie')
                            setTimeout(function () {
                                $('.carte_secret').fadeOut("slow")
                            },3000);
                            ended()
                            if (statusTxt == "error")
                                console.log("Error: " + xhr.status + ": " + xhr.statusText);
                        });

                    }else if (data == 'ouverte'){
                            clearInterval(boucle)
                            interval = setInterval(function (){
                                $.ajax({
                                    url: "{{ path('check_adversaire', {game: game.id}) }}",
                                    success: function(data) {
                                        if(data ==true){
                                            clearInterval(interval)
                                            boucle = setInterval(refreshGame, 3000);
                                        }else{
                                            console.log("pas d'adversaire");
                                        }
                                    },
                                    error: function(){

                                    }
                                })
                            },3000)
                    } else {
                        clearInterval(boucle)
                        $('#message').html('A vous de jouer')
                            document.getElementById("overlay").style.display = "none";
                         $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}",function(responseTxt, statusTxt, xhr){
                             if(statusTxt == "success")
                                    console.log("External content loaded successfully!")
                                        setTimeout(pioche(), 9000)

                                if(localStorage.getItem('{{game.id}}')==1){
                                 document.getElementById("finDeTour").disabled = false;
                                 }
                             if(statusTxt == "error")
                                console.log("Error: " + xhr.status + ": " + xhr.statusText);
                         });
                    }
                },
                error: function(){

                }
            })

        }

        function ended(){
            var images= {
                'jambe': 'carte_main_1.png',
                'balais': 'carte_main_2.png',
                'rhum':'carte_main_3.png',
                'perroquet': 'carte_main_4.png',
                'longuevue':'carte_main_5.png',
                'boulet': 'carte_main_6.png',
                'sabre': 'carte_main_7.png'
            }
            $.ajax({
                url: "{{ path('end_game', {game: game.id}) }}",
                method: 'POST',
                success: function (cachées) {
                    if (cachées=='done'){
                        console.log('carte cache decouverte')
                    }else{
                        console.log(cachées[0][0])
                        setTimeout(function () {
                            document.getElementById("moi_"+cachées[0]).innerHTML += "<img class='discover card_main'  src='/GoldenRumMutinerie/img/card/"+images[cachées[0]]+"'>"
                            document.getElementById("adv_"+cachées[1]).innerHTML += "<img class='discover card_main' src='/GoldenRumMutinerie/img/card/"+images[cachées[1]]+"'>"
                            $('.discover').hide()
                            $('.discover').fadeIn(2000)
                        },3000)}
                    winner()


                },
                error: function(){

                }
            })
        }
        function winner(){
            $.ajax({
                url: "{{ path('win', {game: game.id}) }}",
                method: 'POST',
                success: function (score) {
                    $('.jeton_victoire').fadeIn();
                    console.log(score[0])
                    console.log(score[1][0],score[1][1])
                    for (let i = 0; i < score[1][0].length; i++) {
                        setTimeout(function () {
                            document.getElementById("victoire_"+score[1][0][i]).classList.add("jeton_bas");
                        },3000)
                    }
                    for (let i = 0; i < score[1][1].length; i++) {
                        setTimeout(function () {
                            document.getElementById("victoire_"+score[1][1][i]).classList.add("jeton_haut");
                        },3000)
                    }

                    setTimeout(function () {
                        $("#ended").fadeIn();
                        },7000
                    );
                    if(score[0]==0) {
                        $('#end_msg').html("Il n'y a pas de vainqueur")
                        console.log('new game')
                        verif_fin=setInterval(function () {
                            $.ajax({
                                url: "{{ path('next_round', {game: game.id}) }}",
                                method: 'POST',
                                success: function(data) {
                                    console.log(data)
                                    if (data == true) {
                                        clearInterval(verif_fin)
                                        $('#next_manche').show();

                                    }

                                },
                                error: function(){

                                }
                            })
                        },3000)
                    }else if(score[0]=={{ app.user.id}}){
                        $('#end_msg').html("Vous avez gagné ! ")
                    }else{
                        $('#end_msg').html("Vous avez perdu !")
                    }
                },
                error: function(){

                }
            })


        }

        $(document).on('click', '#next_manche', function(){
            document.location.reload();

        })

         function pioche(){
            $.ajax({
                url: "{{ path('pioche', {game: game.id}) }}",
                method: 'POST',
                success: function (carte) {
                    console.log('pioche :', carte);
                    if (carte != true){
                    document.getElementById("mes_cartes").innerHTML += "<img id='new_card' src=\"../../GoldenRumMutinerie/img/card/" + carte[1] + "\" style=\"width:80px\"/><input type='checkbox' value=" + carte[0] + " style='display: none' class='choixSecret' name='carte_secret' >";
                    $('#new_card').hide()
                    $('#new_card').fadeIn(1000)
                }
                },
                error: function(){

                }
            })
        }




        let action
        $(document).on('click', '#secret', function(){
            if(localStorage.getItem('{{game.id}}')==0) {
                $('.valid_pairs'). remove();
                $("input[name='carte_secret']").removeAttr("disabled");
                $("input[name='carte_secret']").prop('checked', false)
                document.getElementById("action_message").innerHTML="<strong>SECRET</strong>"
                document.getElementById("aide").innerHTML="Choisissez une carte à cacher qui ne sera dévoilée qu'à la fin de la partie"
                console.log('secret')
                action = 'secret' //mémorise l'action en cours
                $('.choixSecret').show()
                $('#valider').show()
                $("input:checkbox").click(function () {
                    var bol = $("input:checkbox:checked").length >= 1;
                    $("input:checkbox").not(":checked").attr("disabled", bol);
                });
            }
        })

        $(document).on('click', '#depot', function(){
            $('.valid_pairs'). remove();
            if(localStorage.getItem('{{game.id}}')==0) {
                $("input[name='carte_secret']").removeAttr("disabled");
                $("input[name='carte_secret']").prop('checked', false)
                document.getElementById("action_message").innerHTML="<strong>DEPOT</strong>"
                document.getElementById("aide").innerHTML="Choisissez deux cartes qui ne seront jamais utilisées lors de la manche."
                console.log('depot')
                $("#depot_carte").addClass("fadeInDown")
                action = 'depot' //mémorise l'action en cours
                $('.choixSecret').show()
                $('#valider').show()
                $("input:checkbox").click(function () {
                    var bol = $("input:checkbox:checked").length >= 2;
                    $("input:checkbox").not(":checked").attr("disabled", bol);
                });
            }
        })

        $(document).on('click', '#offre', function(){
            $('.valid_pairs'). remove();
            if(localStorage.getItem('{{game.id}}')==0) {
                $("input[name='carte_secret']").removeAttr("disabled");
                $("input[name='carte_secret']").prop('checked', false)
                document.getElementById("action_message").innerHTML="<strong>OFFRE</strong>"
                document.getElementById("aide").innerHTML="Choisissez trois cartes. Une d'elles sera choisie par l'adversaire et déposé de son côté devant le pirate correspondant. Les restantes seront posées du votre."
                console.log('offre')
                $("#depot_carte").addClass("fadeInDown")
                action = 'offre' //mémorise l'action en cours
                $('.choixSecret').show()
                $('#valider').show()
                $("input:checkbox").click(function () {
                    var bol = $("input:checkbox:checked").length >= 3;
                    $("input:checkbox").not(":checked").attr("disabled", bol);
                });
            }
        })

        $(document).on('click','#valid_offre',function () {
            console.log($('input[name="carte_offre"]:checked').val())
            if ($("input:checkbox:checked").length = 1) {
                $.ajax({
                    url: "{{ path('update_offre', {game: game.id}) }}",
                    data: {
                        carte: $('input[name="carte_offre"]:checked').val()
                    },
                    method: 'POST',
                    success: function (data) {
                        $.ajax({
                            url: "{{ path('change_player', {game: game.id}) }}",
                            data: {
                                pioche : 0
                            },
                            method: 'POST',
                            success: function (data) {
                                if (data == true) {
                                    document.getElementById("overlay").style.display = "block";
                                    $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}")
                                    boucle = setInterval(refreshGame, 3000);
                                }
                            },
                            error: function () {

                            }
                        })
                    },
                    error: function () {

                    }
                })
            }
        })
        $(document).on('click', '#echange', function(){
            fpair=[]
            $('#valider').hide()
            if(localStorage.getItem('{{game.id}}')==0) {
                $("input[name='carte_secret']").removeAttr("disabled");
                $("input[name='carte_secret']").prop('checked', false)
                document.getElementById("action_message").innerHTML="<strong>ECHANGE</strong>"
                document.getElementById("aide").innerHTML="Choisissez deux paires de cartes. L'adversaire en choisira une, l'autre sera pour vous. Les cartes seront déposées sur le plateau."
                console.log('echange')
                $("#depot_carte").addClass("fadeInDown")
                action = 'echange'
                $('.choixSecret').show()
                $("input:checkbox").click(function () {
                    var bol = $("input:checkbox:checked").length >= 2;
                    $("input:checkbox").not(":checked").attr("disabled", bol);
                    if($("input:checkbox:checked").length == 2) {
                        if(action=='echange'){
                            document.getElementById("game_help").innerHTML = "<button class='valid_pairs' style='width: 250px'>Choisir une première paire</button>"
                            $.each($("input[name='carte_secret']:checked"), function () {
                                $(this).attr("disabled");
                            });
                        }
                    }
                    if($("input:checkbox:checked").length <2) {
                        $('.valid_pairs'). remove();
                    }
                });
            }
        })
        $(document).on('click', '.valid_pairs', function(){
            $('.valid_pairs'). remove();
            $.each($("input[name='carte_secret']:checked"), function () {
                fpair.push($(this).val());
                $(this).prop('checked', false);
                $(this).hide();
            });
            console.log(fpair);
            $("input[name='carte_secret']").removeAttr("disabled");
            $("input:checkbox").click(function () {
                var bol = $("input:checkbox:checked").length >= 2;
                $("input:checkbox").not(":checked").attr("disabled", bol);
                if($("input:checkbox:checked").length == 2) {
                    if(action=='echange'){
                        $('.valid_pairs'). remove();
                        $('#valider').show()
                    }}
                if($("input:checkbox:checked").length <2) {
                    $('#valider').hide()
                }
            });
        })

        $(document).on('click','#valid_echange',function(){
            if ($("input:checkbox:checked").length = 1) {
                $.ajax({
                    url: "{{ path('update_echange', {game: game.id}) }}",
                    data: {
                        choix: $('input[name="carte_echange"]:checked').val()
                    },
                    method: 'POST',
                    success: function (data) {
                        $.ajax({
                            url: "{{ path('change_player', {game: game.id}) }}",
                            data: {
                                pioche : 0
                            },
                            method: 'POST',
                            success: function (data) {
                                if (data == true) {
                                    document.getElementById("overlay").style.display = "block";
                                    $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}")
                                    boucle = setInterval(refreshGame, 3000);
                                }
                            },
                            error: function () {

                            }
                        })
                    },
                    error: function () {

                    }
                })
            }
        })

        $(document).on('click', '#valider', function() {
            var carte_number
            switch (action) {
                case 'secret':
                    carte_number = 1
                    donneesAction = {
                        action: 'secret',
                        carte: $('input[name="carte_secret"]:checked').val()
                    }

                    break;
                case 'depot':
                    carte_number=2
                    var array = [];
                    $.each($("input[name='carte_secret']:checked"), function () {
                        array.push($(this).val());
                    });
                    console.log(array[0])
                    donneesAction = {
                        action: 'depot',
                        carte1: array[0],
                        carte2: array[1]
                    }

                    break;
                case 'offre':
                    carte_number=3;
                    var array = [];
                    $.each($("input[name='carte_secret']:checked"), function () {
                        array.push($(this).val());
                    });
                    donneesAction = {
                        action: 'offre',
                        carte1: array[0],
                        carte2: array[1],
                        carte3 : array[2]
                    }

                    break;
                case 'echange':
                    carte_number=2;
                    console.log(fpair);
                    var array = [];
                    $.each($("input[name='carte_secret']:checked"), function () {
                        array.push($(this).val());
                    });
                    console.log(array);
                    donneesAction = {
                        action: 'echange',
                        firstpair: fpair,
                        secondpair : array
                    }
                    break;
            }

            if ($("input:checkbox:checked").length == carte_number ){

                $.ajax({
                    url: "{{ path('action_game', {game: game.id}) }}",
                    data: donneesAction,
                    method: 'POST',
                    success: function (data) {
                        if (data[0] == true) {
                            console.log(data[1])
                            if (data[1] == 'offre') {
                                $.ajax({
                                    url: "{{ path('change_player', {game: game.id}) }}",
                                    data: {
                                        pioche: 0
                                    },
                                    method: 'POST',
                                    success: function (data) {
                                        if (data == true) {
                                            localStorage.setItem('{{ game.id }}', 1);
                                            document.getElementById("finDeTour").disabled = true;
                                            $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}")
                                            boucle = setInterval(refreshGame, 3000);
                                        }
                                    },
                                    error: function () {

                                    }
                                })
                            }else if(data[1]=='echange'){
                                $.ajax({
                                    url: "{{ path('change_player', {game: game.id}) }}",
                                    data: {
                                        pioche: 0
                                    },
                                    method: 'POST',
                                    success: function (data) {
                                        if (data == true) {
                                            localStorage.setItem('{{ game.id }}', 1);
                                            document.getElementById("finDeTour").disabled = true;
                                            $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}")
                                            boucle = setInterval(refreshGame, 3000);
                                        }
                                    },
                                    error: function () {

                                    }
                                })
                            }else {
                                $('#plateau').load("{{ path('refresh_plateau_game', {game:game.id}) }}", function (responseTxt, statusTxt, xhr) {
                                    if (statusTxt == "success")
                                        document.getElementById("finDeTour").disabled = false;
                                    if (data[1] == 'depot') {
                                        $("#depot_carte").addClass("fadeInDown")
                                        $("#depot_action").addClass("fadeInDown")
                                    }
                                    if (statusTxt == "error")
                                        console.log("Error: " + xhr.status + ": " + xhr.statusText);
                                });
                                localStorage.setItem('{{ game.id }}', 1);
                            }
                        }
                    },
                    error: function () {

                    }
                })
        }else{
                console.log('Selectionner plus de carte')
            }
        })

    </script>
{% endblock %}


